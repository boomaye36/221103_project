<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.justlift.review.dao.ReviewDAO">
	<select id="selectGymReveiwListByWorkoutIdAndType"
		parameterType="map" resultType="com.justlift.review.model.Review">
		SELECT
			`id`,
			`workoutId`,
			`type`,
			`userId`,
			`title`,
			`content`,
			`rank`,
			`createdAt`,
			`updatedAt`
		FROM
			`Review`
		WHERE
			`workoutId` = #{workoutId} and
			`type` = #{type}
	</select>
	<insert id="InsertReview" parameterType="map" >
		INSERT INTO `Review`
			(
			
			`workoutId`,
			`type`,
			`userId`,
			`title`,
			`content`,
			`rank`,
			`createdAt`,
			`updatedAt`
			)
		VALUES
			(
			#{workoutId},
			#{type},
			#{userId},
			#{title},
			#{content},
			#{rank},
			NOW(),
			NOW()
			)
	</insert>
	<select id="selectMyReviewByUserId"
		parameterType="map" resultType="com.justlift.review.model.Review">
		SELECT
			`id`,
			`workoutId`,
			`type`,
			`userId`,
			`title`,
			`content`,
			`rank`,
			`createdAt`,
			`updatedAt`
		FROM
			`Review`
		WHERE
			`userId` = #{userId}
	</select>
	<delete id="deleteReview" parameterType="map">
		DELETE 
		FROM
			`review`
		WHERE `id`  = #{reviewId}
	</delete>
	<select id="selectDetailReviewById"
		parameterType="map" resultType="com.justlift.review.model.Review">
		SELECT
			`id`,
			`workoutId`,
			`type`,
			`userId`,
			`title`,
			`content`,
			`rank`,
			`createdAt`,
			`updatedAt`
		FROM
			`Review`
		WHERE
			`id` = #{reviewId}
	</select>
	
	<select id="selectReviewCountByWorkoutidAndType" parameterType="map" resultType="int">
		SELECT
			count(1)
		FROM
			`Review`
		WHERE
			`workoutId` = #{workoutId}
			AND 
			`type` = #{type}
			AND
			`userId` = #{userId}
	</select>
	<insert id="insertReviewCount" parameterType="map">
		INSERT INTO `reviewCount`
		(
			`reviewId`,
			`userId`,
			`createdAt`
		)
		VALUES
		(
			#{reviewId},
			#{userId},
			NOW()
		)
			
	</insert>
	<select id="selectReviewCountByReviewIdAndUserId" parameterType="map" resultType="int">
		SELECT 
			COUNT(distinct `userId`)
		FROM 
			`reviewCount`
		WHERE 
			`reviewId` =  #{reviewId}
		
		
	</select>
	<select id="selectReviewCountIdByWorkoutIdAndTypeAndUserId" parameterType="map" resultType="int">
		SELECT 
			COUNT(distinct `userId`)
		FROM 
			`reviewCount`
		WHERE 
			
			
			`reviewId` = #{id} order by `id` desc
	</select>
	<select id="selectReviewList" resultType="com.justlift.review.model.Review">
		
		SELECT
			`id`,
			`workoutId`,
			`type`,
			`userId`,
			`title`,
			`content`,
			`rank`,
			`createdAt`,
			`updatedAt`
		FROM 
			`Review`
		WHERE `workoutId` = #{workoutId}
		AND `type` = #{type}
		<choose>
		<when test="sort == '' ">
		ORDER BY `id` ASC
		</when>
		<!-- <when test='sort == 'access>
		ORDER BY `id` ASC
		</when> -->
		<when test='sort == "rankhigh"'>
		ORDER BY `rank` DESC
		</when>
		<when test='sort == "ranklow"'>
		ORDER BY `rank` ASC
		</when>
		<when test='sort == "old"'>
		ORDER BY `createdAt` ASC
		</when>
		<when test='sort == "new"'>
		ORDER BY `createdAt` DESC
		</when>
		<!-- <when test='sort == "access"'>
		ORDER BY (SELECT 
			COUNT(distinct `userId`)
		FROM 
			`reviewCount`)
		WHERE 
			`reviewId` =  #{workoutId}
			DESC
		</when> -->
		<when test='sort == "title"'>
		ORDER BY `title` asc
		</when>
		</choose>
	</select>
	<select id="selectReviewByWorkoutIdAndTypeAndUserId" parameterType="map" resultType="com.justlift.review.model.Review" >
		SELECT 
			*
		FROM
			`review`
		WHERE 
			`userId` = #{userId}
		AND
			`type` = #{type}
		AND
			`workoutId` = #{workoutId}
	</select>
</mapper>